name: Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # schedule:
  #   - cron: '0 7 * * MON-FRI'
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: "false"
  PLPRQL_VERSION: c8afddec17d26476cdcba2d90937596a7d8aea91

jobs:
  Debian:
    # if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # We want all of them to run, even if one fails
      matrix:
        pg: [ "12", "13", "14", "15", "16" ]
        os: [ { distribution: "debian", release: "bullseye" }, { distribution: "debian", release: "bookworm" } ]
    steps:
      - uses: actions/checkout@v4
      - name: Package PL/PRQL .deb for PostgreSQL ${{ matrix.pg }} on ${{ matrix.os.distribution }} ${{ matrix.os.release }}
        run: |
          docker build \
          --build-arg PG_MAJOR_VERSION=${{ matrix.pg }} \
          --build-arg PLPRQL_VERSION=$PLPRQL_VERSION \
          -t "plprql-$PLPRQL_VERSION-pg-${{ matrix.pg }}-${{ matrix.os.distribution }}-${{ matrix.os.release }}" \
          -f ".github/docker/Dockerfile.${{ matrix.os.distribution }}" \
          .
      - name: Extract .deb
        run: |
          CONTAINER_ID=$(docker create plprql-$PLPRQL_VERSION-pg-${{ matrix.pg }}-${{ matrix.os.distribution }}-${{ matrix.os.release }})
          docker cp $CONTAINER_ID:/out /home/runner
          docker rm -v $CONTAINER_ID
      - name: Verify Install
        run: |
          CONTAINER_ID=$(docker create postgres:${{ matrix.pg }}-${{ matrix.os.release }})

          # Install PL/PRQL
          docker cp /home/runner $CONTAINER:/tmp
          docker run $CONTAINER dpkg -i /tmp/out/plprql*.deb

          # Verify install
          docker run $CONTAINER_ID sudo systemctl start postgresql.service
          docker run $CONTAINER_ID pg_isready
          docker run $CONTAINER_ID createdb -U postgres postgres
          docker run $CONTAINER_ID psql -U postgres -c "create extension plprql;"
          docker run $CONTAINER_ID psql -U postgres -c "select prql_to_sql('from table');"

          docker rm -v $CONTAINER_ID
      - name: Upload .deb
        uses: softprops/action-gh-release@v1
        with:
          files: /home/runner/out/plprql*.deb
  Bash:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PostgreSQL headers
        run: sudo apt-get install postgresql-server-dev-14
      - name: Install cargo-pgrx
        run: |
          PGRX_VERSION=$(cargo metadata --format-version 1 | jq -r '.packages[]|select(.name=="pgrx")|.version')
          cargo install --locked --version=$PGRX_VERSION cargo-pgrx --debug --force
          cargo pgrx init --pg14 $(which pg_config)
      - name: Run install.sh
        run: |
          cd scripts
          chmod +x install.sh
          ./install.sh --pg-config $(which pg_config)
      - name: Start PostgreSQL
        run: |
          sudo systemctl start postgresql.service
          pg_isready
          # superuser (-s), can create databases (-d) and roles (-r), no password prompt (-w) named runner
          sudo -u postgres createuser -s -d -r -w runner
      - name: Verify install
        run: |
          createdb -U runner runner
          psql -U runner -c "create extension plprql;"
          psql -U runner -c "select prql_to_sql('from table');"
